{"version":3,"sources":["components/universal/AuthRoute.tsx","components/universal/LoadingScreen.tsx","components/universal/NavBar.tsx","components/universal/PatternBackground.tsx","assets/bg-pattern-tile.svg","components/forms/inputs/TextInput.tsx","components/forms/SignUpForm.tsx","components/forms/inputs/FileInput.tsx","apollo/mutations.ts","util.ts","components/forms/LoginForm.tsx","components/pages/Auth.tsx","components/buttons/DemoUserButton.tsx","components/misc/AuthHorizontalRule.tsx","assets/stagewood_consortium_logo.png","assets/stagewood_consortium_text.png","apollo/index.ts","theme.ts","components/modals/ErrorModal.tsx","App.tsx","index.tsx","contexts/ErrorContext.tsx"],"names":["AuthRoute","userId","path","render","exact","to","LoadingScreen","useStyles","makeStyles","theme","bg","backgroundColor","toolbar","display","justifyContent","padding","spacing","Navbar","handleLogout","AppBar","position","color","className","Toolbar","Button","onClick","style","variant","PageType","background","backgroundImage","backgroundPositionX","backgroundSize","container","width","height","PatternBackground","pageType","children","Auth","TextInputType","SizeType","SignUpActionTypes","getLabel","type","UsernameOREmail","toUpperCase","slice","TextInput","state","onChange","actionType","size","inputType","Password","Email","TextField","value","e","label","fullWidth","inputContainer","alignItems","margin","fileText","marginLeft","button","minWidth","FileInput","file","fileInput","useRef","accept","ref","current","click","startIcon","Typography","noWrap","name","SIGN_UP","gql","LOGIN","toBase64","test","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Error","initialState","username","email","password","profilePicture","undefined","signupReducer","action","newState","Object","assign","SET_USERNAME","payload","SET_EMAIL","SET_NAME","SET_PASSWORD","SET_PROFILE_PICTURE","LoginActionTypes","form","flexDirection","SignUpForm","setUser","useReducer","dispatch","useMutation","onError","graphQLErrors","length","valErrors","extensions","validationErrors","setErrors","signUp","data","useContext","ErrorContext","history","useHistory","onTextChange","useCallback","currentTarget","onFileChange","files","onSubmit","a","preventDefault","base64","message","Picture","variables","input","res","localStorage","setItem","signup","token","user","__typename","push","console","log","Username","Small","Name","usernameOrEmail","loginReducer","SET_USERNAME_OR_EMAIL","AuthPageType","LoginForm","login","Medium","marginTop","DemoUserButton","demoLogin","or","top","left","zIndex","AuthHorizontalRule","formCard","transform","breakpoints","down","flexColumn","cardHeader","cardContent","cardFooter","marginBottom","logoStyle","logoTextStyle","subheaderText","fontWeight","link","palette","secondary","main","textDecoration","dark","Paper","elevation","src","logo","alt","logoText","align","SignUp","httpLink","createHttpLink","uri","setContext","req","headers","getItem","Authorization","concat","client","ApolloClient","cache","InMemoryCache","createMuiTheme","typography","fontFamily","join","primary","contrastText","info","h3","fontSize","Transition","React","forwardRef","props","Slide","direction","title","textAlign","content","ErrorModal","open","setOpen","errors","handleClose","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","classes","root","id","disableTypography","DialogContent","List","map","i","ListItem","ListItemText","primaryTypographyProps","errorKey","keys","DialogActions","Home","lazy","initialUser","App","useState","removeItem","useEffect","clear","ThemeProvider","Provider","fallback","Login","ReactDOM","StrictMode","document","getElementById","createContext"],"mappings":"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","file":"static/js/main.d1fac3ee.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\ninterface AuthRouteProps {\n  userId: number | null;\n  path: string;\n  render: React.FC<any>;\n}\n\nconst AuthRoute = ({ userId, path, render }: AuthRouteProps) => {\n  if (!userId) {\n    return <Redirect exact to=\"/login\" />;\n  } else {\n    return <Route path={path} render={render} />;\n  }\n};\n\nexport default AuthRoute;\n","import React from 'react';\n\nconst LoadingScreen: React.FC<unknown> = () => {\n  return <div>Loading...</div>;\n};\n\nexport default LoadingScreen;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    backgroundColor: '#ef5350',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 10),\n  },\n}));\n\ninterface NavbarProps {\n  handleLogout: () => void;\n}\n\nconst Navbar: React.FC<NavbarProps> = ({ handleLogout }) => {\n  const { bg, toolbar } = useStyles();\n  return (\n    <AppBar position=\"static\" color=\"secondary\" className={bg}>\n      <Toolbar className={toolbar}>\n        <Button\n          onClick={() => handleLogout()}\n          style={{ color: 'white' }}\n          color=\"primary\"\n          variant=\"outlined\"\n        >\n          Logout\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport background from '../../assets/bg-pattern-tile.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    backgroundImage: `url(${background})`,\n    backgroundPositionX: '200px',\n    backgroundSize: '1000px',\n  },\n  container: {\n    width: '100vw',\n    height: '100vh',\n    position: 'relative',\n    backgroundColor: 'rgba(0, 0, 0, 0.08)',\n  },\n}));\n\nexport enum PageType {\n  Auth = 'auth',\n  Home = 'home',\n}\n\ninterface PatternBackgroundProps {\n  pageType: PageType;\n}\n\nconst PatternBackground: React.FC<PatternBackgroundProps> = ({\n  pageType,\n  children,\n}) => {\n  const { background, container } = useStyles();\n\n  if (pageType === PageType.Auth) {\n    return (\n      <div className={background}>\n        <section className={container}>{children}</section>\n      </div>\n    );\n  } else {\n    return (\n      <div className={background}>\n        <div className={container}>{children}</div>\n      </div>\n    );\n  }\n};\n\nexport default PatternBackground;\n","export default __webpack_public_path__ + \"static/media/bg-pattern-tile.7d438991.svg\";","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { SignUpActionTypes } from '../SignUpForm';\nimport { LoginActionTypes } from '../LoginForm';\n\nexport enum TextInputType {\n  Username = 'username',\n  Email = 'email',\n  Name = 'name',\n  Password = 'password',\n  UsernameOREmail = 'usernameOrEmail',\n}\n\ninterface TextInputProps {\n  state: string;\n  onChange: (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    type: SignUpActionTypes | LoginActionTypes\n  ) => void;\n  actionType: SignUpActionTypes | LoginActionTypes;\n  type: TextInputType;\n  size: SizeType | undefined;\n}\n\nexport enum SizeType {\n  Small = 'small',\n  Medium = 'medium',\n}\n\nconst getLabel = (type: string) => {\n  if (type === TextInputType.UsernameOREmail) {\n    return 'Username or Email';\n  }\n  return type[0].toUpperCase() + type.slice(1);\n};\n\nconst TextInput: React.FC<TextInputProps> = ({\n  state,\n  onChange,\n  type,\n  actionType,\n  size,\n}) => {\n  let inputType: string = '';\n\n  if (type === TextInputType.Password || type === TextInputType.Email) {\n    inputType = type;\n  } else {\n    inputType = 'text';\n  }\n\n  return (\n    <TextField\n      value={state}\n      onChange={(\n        e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      ) => onChange(e, actionType)}\n      type={inputType}\n      label={getLabel(type)}\n      variant=\"outlined\"\n      fullWidth={true}\n      size={size}\n    />\n  );\n};\n\nexport default TextInput;\n","import React, {\n  useReducer,\n  useCallback,\n  SyntheticEvent,\n  useContext,\n} from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { TextInput, FileInput } from './inputs';\nimport { TextInputType } from './inputs/types';\nimport { Action } from './types';\nimport { LoginActionTypes } from './LoginForm';\nimport { SizeType } from './inputs/TextInput';\nimport { SIGN_UP } from '../../apollo/mutations';\nimport { toBase64 } from '../../util';\nimport { ErrorContext } from '../../contexts';\nimport { AuthFormProps } from '../pages/Auth';\n\ntype LoginFormState = {\n  username: string;\n  email: string;\n  name: string;\n  password: string;\n  profilePicture: File | undefined;\n};\n\nconst initialState: LoginFormState = {\n  username: '',\n  email: '',\n  name: '',\n  password: '',\n  profilePicture: undefined,\n};\n\nexport enum SignUpActionTypes {\n  SET_USERNAME = 'SignUpForm/SET_USERNAME',\n  SET_EMAIL = 'SignUpForm/SET_EMAIL',\n  SET_NAME = 'SignUpForm/SET_NAME',\n  SET_PASSWORD = 'SignUpForm/SET_PASSWORD',\n  SET_PROFILE_PICTURE = 'SignUpForm/SET_PROFILE_PICTURE',\n}\n\nexport type SignUpAction = {\n  type: SignUpActionTypes;\n  payload: string;\n  file?: File;\n};\n\nfunction signupReducer(state: LoginFormState, action: Action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SignUpActionTypes.SET_USERNAME:\n      newState.username = action.payload;\n      return newState;\n    case SignUpActionTypes.SET_EMAIL:\n      newState.email = action.payload;\n      return newState;\n    case SignUpActionTypes.SET_NAME:\n      newState.name = action.payload;\n      return newState;\n    case SignUpActionTypes.SET_PASSWORD:\n      newState.password = action.payload;\n      return newState;\n    case SignUpActionTypes.SET_PROFILE_PICTURE:\n      newState.profilePicture = action.file;\n      return newState;\n    default:\n      return state;\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    height: '320px',\n  },\n  button: {\n    width: '100%',\n    height: '32px',\n  },\n}));\n\nexport const SignUpForm: React.FC<AuthFormProps> = ({ setUser }) => {\n  const [\n    { username, email, name, password, profilePicture },\n    dispatch,\n  ] = useReducer(signupReducer, initialState);\n  const [signUp, { data }] = useMutation(SIGN_UP, {\n    onError: (e) => {\n      if (e.graphQLErrors.length) {\n        const valErrors = e.graphQLErrors[0];\n        if (valErrors.extensions && valErrors.extensions.validationErrors) {\n          setErrors(valErrors.extensions.validationErrors);\n          return;\n        }\n      }\n    },\n  });\n  const { setErrors } = useContext(ErrorContext);\n  const history = useHistory();\n\n  const onTextChange = useCallback(\n    (\n      e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n      type: SignUpActionTypes | LoginActionTypes\n    ) => {\n      dispatch({\n        type: type,\n        payload: e.currentTarget.value,\n      });\n    },\n    []\n  );\n\n  const onFileChange = useCallback(\n    (\n      e: React.ChangeEvent<HTMLInputElement>,\n      type: SignUpActionTypes | LoginActionTypes\n    ) => {\n      const file = e.currentTarget.files ? e.currentTarget.files[0] : undefined;\n      dispatch({ type, file, payload: '' });\n    },\n    []\n  );\n\n  const onSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n    let base64;\n    try {\n      base64 = await toBase64(profilePicture);\n    } catch (e) {\n      let message = e.message;\n      setErrors([{ Picture: message }]);\n      return;\n    }\n    try {\n      const res = await signUp({\n        variables: {\n          input: {\n            username,\n            email,\n            name,\n            password,\n            profilePicture: base64,\n          },\n        },\n      });\n\n      if (res.data) {\n        localStorage.setItem('token', res.data.signup.token);\n        const { __typename, ...user } = res.data.signup.user;\n        setUser(user);\n        history.push('/');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const { form, button } = useStyles();\n\n  return (\n    <form onSubmit={onSubmit} className={form}>\n      <TextInput\n        state={username}\n        onChange={onTextChange}\n        type={TextInputType.Username}\n        actionType={SignUpActionTypes.SET_USERNAME}\n        size={SizeType.Small}\n      />\n      <TextInput\n        state={email}\n        onChange={onTextChange}\n        type={TextInputType.Email}\n        actionType={SignUpActionTypes.SET_EMAIL}\n        size={SizeType.Small}\n      />\n      <TextInput\n        state={name}\n        onChange={onTextChange}\n        type={TextInputType.Name}\n        actionType={SignUpActionTypes.SET_NAME}\n        size={SizeType.Small}\n      />\n      <TextInput\n        state={password}\n        onChange={onTextChange}\n        type={TextInputType.Password}\n        actionType={SignUpActionTypes.SET_PASSWORD}\n        size={SizeType.Small}\n      />\n      <FileInput\n        file={profilePicture}\n        onChange={onFileChange}\n        actionType={SignUpActionTypes.SET_PROFILE_PICTURE}\n      />\n      <Button\n        className={button}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"small\"\n      >\n        Sign Up\n      </Button>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n","import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { SignUpActionTypes } from '../SignUpForm';\n\ninterface FileInputProps {\n  file: File | undefined;\n  onChange: (\n    e: React.ChangeEvent<HTMLInputElement>,\n    type: SignUpActionTypes\n  ) => void;\n  actionType: SignUpActionTypes;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    color: '#555555',\n    margin: theme.spacing(0, 'auto'),\n  },\n  fileText: {\n    marginLeft: '14px',\n  },\n  button: {\n    width: '72%',\n    minWidth: '240px',\n  },\n}));\n\nconst FileInput: React.FC<FileInputProps> = ({\n  file,\n  onChange,\n  actionType,\n}) => {\n  const fileInput = useRef<HTMLInputElement | null>(null);\n  const { inputContainer, fileText, button } = useStyles();\n  return (\n    <div className={inputContainer}>\n      <input\n        type=\"file\"\n        accept=\"image/jpeg\"\n        style={{ display: 'none' }}\n        ref={fileInput}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          onChange(e, actionType);\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        className={button}\n        onClick={() => {\n          if (fileInput.current) {\n            fileInput.current.click();\n          }\n        }}\n        startIcon={<CloudUploadIcon />}\n      >\n        <Typography variant=\"body2\">Upload Profile Picture</Typography>\n      </Button>\n      <Typography className={fileText} variant=\"body2\" noWrap={true}>\n        {file ? file.name : 'No file selected'}\n      </Typography>\n    </div>\n  );\n};\n\nexport default FileInput;\n","import { gql } from '@apollo/client';\n\nexport const SIGN_UP = gql`\n  mutation SignUp($input: SignUpInput!) {\n    signup(input: $input) {\n      token\n      user {\n        id\n        username\n        email\n        name\n        profilePicture\n      }\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation Login($usernameOrEmail: String!, $password: String!) {\n    login(usernameOrEmail: $usernameOrEmail, password: $password) {\n      token\n      user {\n        id\n        username\n        email\n        name\n        profilePicture\n      }\n    }\n  }\n`;\n\nexport const LOGOUT = gql`\n  mutation Logout($userId: ID!) {\n    logout(userId: $userId) {\n      bool\n    }\n  }\n`;\n","export const toBase64 = (file: File | undefined) => {\n  const imgRegex = /\\.jpg/i;\n  if (!file || !imgRegex.test(file.name)) {\n    throw new Error('Please upload a valid .jpg file');\n  } else {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n};\n","import React, {\n  useReducer,\n  useCallback,\n  ChangeEvent,\n  SyntheticEvent,\n  useContext,\n} from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { TextInput } from './inputs';\nimport { TextInputType } from './inputs/types';\nimport { SignUpActionTypes } from './SignUpForm';\nimport { Action } from './types';\nimport { SizeType } from './inputs/TextInput';\nimport { LOGIN } from '../../apollo/mutations';\nimport { ErrorContext } from '../../contexts';\nimport { AuthFormProps } from '../pages/Auth';\n\ntype LoginFormState = {\n  usernameOrEmail: string;\n  password: string;\n};\n\nconst initialState: LoginFormState = {\n  usernameOrEmail: '',\n  password: '',\n};\n\nexport enum LoginActionTypes {\n  SET_USERNAME_OR_EMAIL = 'LoginForm/SET_USERNAME_OR_EMAIL',\n  SET_PASSWORD = 'LoginForm/SET_PASSWORD',\n}\n\nfunction loginReducer(state: LoginFormState, { type, payload }: Action) {\n  const newState = Object.assign({}, state);\n  switch (type) {\n    case LoginActionTypes.SET_USERNAME_OR_EMAIL:\n      newState.usernameOrEmail = payload;\n      return newState;\n    case LoginActionTypes.SET_PASSWORD:\n      newState.password = payload;\n      return newState;\n    default:\n      return state;\n  }\n}\n\nconst useStyles = makeStyles({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    justifyContent: 'space-evenly',\n    height: '320px',\n  },\n  button: {\n    backgroundColor: '#EA2026',\n    height: '48px',\n  },\n});\n\nconst LoginForm: React.FC<AuthFormProps> = ({ setUser }) => {\n  const [{ usernameOrEmail, password }, dispatch] = useReducer(\n    loginReducer,\n    initialState\n  );\n  const [login, { data }] = useMutation(LOGIN, {\n    onError: (e) => {\n      if (e.graphQLErrors.length) {\n        setErrors(['Invalid Login']);\n      }\n    },\n  });\n  const { setErrors } = useContext(ErrorContext);\n  const history = useHistory();\n\n  const onTextChange = useCallback(\n    (\n      e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n      type: LoginActionTypes | SignUpActionTypes\n    ) => {\n      dispatch({\n        type: type,\n        payload: e.currentTarget.value,\n      });\n    },\n    []\n  );\n\n  const onSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n    const res = await login({\n      variables: {\n        usernameOrEmail,\n        password,\n      },\n    });\n\n    if (res && res.data) {\n      localStorage.setItem('token', res.data.login.token);\n      const { __typename, ...user } = res.data.login.user;\n      setUser(user);\n      history.push('/');\n    }\n  };\n\n  const { form, button } = useStyles();\n\n  return (\n    <form className={form} onSubmit={onSubmit}>\n      <TextInput\n        state={usernameOrEmail}\n        onChange={onTextChange}\n        actionType={LoginActionTypes.SET_USERNAME_OR_EMAIL}\n        type={TextInputType.UsernameOREmail}\n        size={SizeType.Medium}\n      />\n      <TextInput\n        state={password}\n        onChange={onTextChange}\n        actionType={LoginActionTypes.SET_PASSWORD}\n        type={TextInputType.Password}\n        size={SizeType.Medium}\n      />\n      <Button\n        className={button}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Sign In\n      </Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { SignUpForm, LoginForm } from '../forms';\nimport { DemoUserButton } from '../buttons';\nimport { AuthHorizontalRule } from '../misc';\nimport { User } from '../../App';\nimport logo from '../../assets/stagewood_consortium_logo.png';\nimport logoText from '../../assets/stagewood_consortium_text.png';\nimport PatternBackground, { PageType } from '../universal/PatternBackground';\n\nexport enum AuthPageType {\n  Login = 'login',\n  SignUp = 'signup',\n}\n\nexport interface AuthFormProps {\n  setUser: Dispatch<SetStateAction<User>>;\n}\n\ninterface AuthProps extends AuthFormProps {\n  pageType: AuthPageType;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formCard: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '512px',\n    height: '672px',\n    padding: theme.spacing(3, 7, 0),\n    [theme.breakpoints.down('xs')]: {\n      height: '100vh',\n      width: '100vw',\n    },\n  },\n  flexColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  cardHeader: {\n    height: '28%',\n    justifyContent: 'space-between',\n  },\n  cardContent: {\n    width: '100%',\n  },\n  cardFooter: {\n    marginTop: '4%',\n    marginBottom: '2%',\n  },\n  logoStyle: {\n    width: '56px',\n  },\n  logoTextStyle: {\n    width: '228px',\n  },\n  subheaderText: {\n    color: '#555555',\n    fontWeight: 'normal',\n  },\n  link: {\n    color: theme.palette.secondary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      color: theme.palette.secondary.dark,\n    },\n  },\n}));\n\nconst Auth: React.FC<AuthProps> = ({ pageType, setUser }) => {\n  const {\n    formCard,\n    logoStyle,\n    logoTextStyle,\n    link,\n    flexColumn,\n    cardHeader,\n    cardContent,\n    cardFooter,\n    subheaderText,\n  } = useStyles();\n\n  return (\n    <PatternBackground pageType={PageType.Auth}>\n      <Paper variant=\"outlined\" elevation={3} className={formCard}>\n        <div className={`${flexColumn} ${cardHeader}`}>\n          <img className={logoStyle} src={logo} alt=\"Stagewood Consortium\" />\n          <img\n            className={logoTextStyle}\n            src={logoText}\n            alt=\"StageWood Consortium Inc.\"\n          />\n          <Typography\n            className={subheaderText}\n            align=\"center\"\n            variant=\"subtitle1\"\n          >\n            Dream. Express. Produce.\n          </Typography>\n        </div>\n        <div className={`${flexColumn} ${cardContent}`}>\n          <DemoUserButton setUser={setUser} />\n          <AuthHorizontalRule />\n          {pageType === AuthPageType.SignUp ? (\n            <>\n              <SignUpForm setUser={setUser} />\n              <div className={`${flexColumn} ${cardFooter}`}>\n                <Typography className={subheaderText} variant=\"body2\">\n                  Have an account?\n                </Typography>\n                <Link className={link} to=\"/login\">\n                  <Typography variant=\"body2\">Sign In</Typography>\n                </Link>\n              </div>\n            </>\n          ) : (\n            <>\n              <LoginForm setUser={setUser} />\n              <div className={`${flexColumn} ${cardFooter}`}>\n                <Typography className={subheaderText} variant=\"body2\">\n                  Need an account?\n                </Typography>\n                <Link className={link} to=\"/signup\">\n                  <Typography variant=\"body2\">Sign Up</Typography>\n                </Link>\n              </div>\n            </>\n          )}\n        </div>\n      </Paper>\n    </PatternBackground>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { LOGIN } from '../../apollo/mutations';\nimport { AuthFormProps } from '../pages/Auth';\n\nconst useStyles = makeStyles(() => ({\n  button: {\n    width: '100%',\n    marginTop: '4%',\n    height: '32px',\n  },\n}));\n\nconst DemoUserButton: React.FC<AuthFormProps> = ({ setUser }) => {\n  const history = useHistory();\n  const [login, { data }] = useMutation(LOGIN);\n  const demoLogin = async () => {\n    const res = await login({\n      variables: {\n        usernameOrEmail: 'PanosPHL',\n        password: 'password',\n      },\n    });\n\n    if (res.data) {\n      localStorage.setItem('token', res.data.login.token);\n      const { __typename, ...user } = res.data.login.user;\n      setUser(user);\n      history.push('/');\n    }\n  };\n\n  const { button } = useStyles();\n\n  return (\n    <Button\n      onClick={() => demoLogin()}\n      className={button}\n      type=\"button\"\n      variant=\"contained\"\n      size=\"small\"\n    >\n      Continue as Demo User\n    </Button>\n  );\n};\n\nexport default DemoUserButton;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'relative',\n    width: '100%',\n    margin: theme.spacing(2.5, 0),\n  },\n  or: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    top: '-10px',\n    left: '44.5%',\n    height: '20px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    zIndex: 2,\n  },\n}));\n\nconst AuthHorizontalRule: React.FC<unknown> = () => {\n  const { container, or } = useStyles();\n\n  return (\n    <div className={container}>\n      <hr />\n      <Typography variant=\"body2\" className={or}>\n        or\n      </Typography>\n    </div>\n  );\n};\n\nexport default AuthHorizontalRule;\n","export default __webpack_public_path__ + \"static/media/stagewood_consortium_logo.1b84f41e.png\";","export default __webpack_public_path__ + \"static/media/stagewood_consortium_text.fb95a4e0.png\";","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\n\nconst httpLink = createHttpLink({ uri: '/graphql' });\nconst authLink = setContext(async (req: any, { headers }: any) => {\n  const token = localStorage.getItem('token');\n\n  return {\n    ...headers,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : null,\n    },\n  };\n});\n\nconst link = authLink.concat(httpLink as any);\n\nconst client = new ApolloClient({\n  link: link as any,\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  palette: {\n    primary: {\n      main: 'rgba(0, 0, 0, 0.65)',\n      dark: '#F8F8F8',\n      contrastText: '#333333',\n    },\n    secondary: {\n      main: '#EB2127',\n      dark: '#9D1120',\n    },\n    info: {\n      main: '#757575',\n    },\n  },\n});\n\ntheme.typography.h3 = {\n  fontFamily: 'Roboto, Helvetica',\n  fontSize: '2.6rem',\n  [theme.breakpoints.down('lg')]: {\n    fontSize: '2.2rem',\n  },\n  [theme.breakpoints.down('md')]: {\n    fontSize: '1.6rem',\n  },\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '2.4rem',\n  },\n};\n\nexport default theme;\n","import React, { SetStateAction, Dispatch } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide, { SlideProps } from '@material-ui/core/Slide';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { ErrorArray } from '../../contexts/ErrorContext';\n\nconst Transition = React.forwardRef<JSX.Element, SlideProps>((props, ref) => {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\ninterface ErrorModalProps {\n  open: boolean;\n  setOpen: Dispatch<SetStateAction<boolean>>;\n  errors: ErrorArray;\n  setErrors: Dispatch<SetStateAction<ErrorArray>>;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    textAlign: 'center',\n    fontSize: '2.4rem',\n    fontFamily: 'Roboto',\n  },\n  content: {\n    margin: theme.spacing(0, 'auto'),\n  },\n}));\n\nconst ErrorModal: React.FC<ErrorModalProps> = ({\n  open,\n  setOpen,\n  errors,\n  setErrors,\n}) => {\n  const handleClose = () => {\n    setOpen(false);\n    setErrors([]);\n  };\n\n  const { title, content } = useStyles();\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"error-modal-slide-title\"\n      aria-describedby=\"error-modal-slide-description\"\n      fullWidth={true}\n    >\n      <DialogTitle\n        classes={{\n          root: title,\n        }}\n        id=\"error-modal-slide-title\"\n        disableTypography={true}\n      >\n        Errors\n      </DialogTitle>\n      <DialogContent className={content} id=\"error-modal-slide-list\">\n        <List>\n          {errors.map((error, i) => {\n            if (typeof error === 'string') {\n              return (\n                <ListItem key={`error-${i + 1}`}>\n                  <ListItemText\n                    primaryTypographyProps={{\n                      color: 'error',\n                      variant: errors.length > 1 ? 'body2' : 'h6',\n                    }}\n                    primary={`${error}`}\n                  />\n                </ListItem>\n              );\n            } else if (error) {\n              const errorKey = Object.keys(error)[0];\n              return (\n                <ListItem key={`error-${i + 1}`}>\n                  <ListItemText\n                    primaryTypographyProps={{\n                      color: 'error',\n                      variant: errors.length > 1 ? 'body2' : 'h6',\n                    }}\n                    primary={`${errorKey}: ${error ? error[errorKey] : ''}`}\n                  />\n                </ListItem>\n              );\n            }\n            return <></>;\n          })}\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ErrorModal;\n","import React, { Suspense, lazy, useState, useEffect, useCallback } from 'react';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './apollo';\nimport { ThemeProvider } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthRoute, LoadingScreen } from './components/universal';\nimport { AuthPageType } from './components/pages/Auth';\nimport theme from './theme';\nimport { ErrorContext } from './contexts/';\nimport { ErrorContextState, ErrorArray } from './contexts/ErrorContext';\nimport { ErrorModal } from './components/modals';\nimport './index.css';\n\nconst Home = lazy(() => import('./components/pages/Home'));\nconst Auth = lazy(() => import('./components/pages/Auth'));\n\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  name: string;\n  profilePicture: string;\n}\n\nconst initialUser: User = {\n  id: 0,\n  username: '',\n  email: '',\n  name: '',\n  profilePicture: 'string',\n};\n\nfunction App() {\n  const [errors, setErrors] = useState<ErrorArray>([]);\n  const [open, setOpen] = useState(false);\n  const [user, setUser] = useState<User>(initialUser);\n\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem('token');\n    setUser(initialUser);\n  }, []);\n\n  const value: ErrorContextState = {\n    errors,\n    setErrors,\n  };\n\n  useEffect(() => {\n    if (!open && errors.length) {\n      setOpen(true);\n    }\n  }, [errors.length]);\n\n  useEffect(() => {\n    return () => {\n      localStorage.clear();\n    };\n  }, []);\n\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <ErrorContext.Provider value={value}>\n          <ErrorModal\n            open={open}\n            setOpen={setOpen}\n            errors={errors}\n            setErrors={setErrors}\n          />\n          <Router>\n            <Suspense fallback={<LoadingScreen />}>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={() => (\n                    <Auth pageType={AuthPageType.Login} setUser={setUser} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/signup\"\n                  render={() => (\n                    <Auth pageType={AuthPageType.SignUp} setUser={setUser} />\n                  )}\n                />\n                <AuthRoute\n                  path=\"/\"\n                  render={() => (\n                    <Home user={user} handleLogout={handleLogout} />\n                  )}\n                  userId={user.id}\n                />\n              </Switch>\n            </Suspense>\n          </Router>\n        </ErrorContext.Provider>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { createContext, Dispatch, SetStateAction } from 'react';\n\ntype SignUpError = {\n  [field: string]: string;\n};\n\nexport type ErrorArray = Array<SignUpError | string | undefined>;\n\nexport interface ErrorContextState {\n  errors: ErrorArray;\n  setErrors: (() => void) | Dispatch<SetStateAction<ErrorArray>>;\n}\n\nconst ErrorContext = createContext<ErrorContextState>({\n  errors: [],\n  setErrors: () => null,\n});\n\nexport default ErrorContext;\n"],"sourceRoot":""}